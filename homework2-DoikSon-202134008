//number 1

#include <Arduino.h>
#include <TM1637Display.h>

#define CLK 2
#define DIO 3

TM1637Display display(CLK, DIO);

void setup() {
  display.setBrightness(7);
  display.clear();
}

void loop() {
  if (millis() >= 600000) {                              //if timer is done,
    display.showNumberDecEx(0, 0);                       //display 0
    display.showNumberDecEx(millis() - 600000, 0);       //display difference between theoretical miliseconds passed and actual miliseconds passed
    while(1);                                            //stop the code with indefinite loop
  } else {
    unsigned long remaining = 600000 - millis();         //remaining miliseconds
    int total_seconds = remaining / 1000;              
    int actual_seconds = total_seconds % 60;
    int minutes = total_seconds / 60;    
    display.showNumberDecEx(minutes * 100 + actual_seconds, 0b01000000);  //0b01000000 means to display colon
  }
}

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

//number 2

#include "pitches.h"             //added a new tab in Arduino named "pitches.h" that has all the public constants for each note

int melody[] = {
  NOTE_E4, NOTE_B4, NOTE_B4, 
  NOTE_FS4, NOTE_E4, NOTE_E4,
  NOTE_B3, NOTE_E4, NOTE_E4,
  NOTE_FS4, NOTE_E4, 0,          //0 = rest

  NOTE_E4, NOTE_B4, NOTE_B4,
  NOTE_FS4, NOTE_E4, NOTE_E4,
  NOTE_B3, NOTE_E4, NOTE_E4,
  NOTE_FS4, NOTE_E4, 0,

  NOTE_E4, NOTE_B4, NOTE_A4,
  NOTE_E4, NOTE_FS4, NOTE_D4,
  NOTE_D4, NOTE_A4, NOTE_G4,
  NOTE_C4,  

  NOTE_B3, NOTE_C4, NOTE_D4,
  NOTE_E4, NOTE_FS4, NOTE_G4,
  NOTE_A4, NOTE_B4, NOTE_A4,
  NOTE_DS4
};

double noteDurations[] = {
  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,  //each line represents four measures
  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
  4, 4, 4, 4, 4, 4, 4, 4, 4, 1.33,
  4, 4, 4, 4, 4, 4, 4, 4, 4, 1.33
};

void setup() {
  for(int i = 0; i < 44; i++){
    int noteDuration = 1000 / noteDurations[i];
    tone(8, melody[i], noteDuration);

    int pause = noteDuration * 1.30;
    delay(pause);
    noTone(8);
  }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------

//number 3

int ledPins[] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11}; 

void setup() {
  for (int i = 2; i <= 11; i++) {
    pinMode(ledPins[i], OUTPUT);
  }
}

void loop() {
  for(int j = 0; j < 3; j++){
    for (int i = 0; i < 10; i++) {                      //flickering left --> right
      digitalWrite(ledPins[i], HIGH);
      delay(200); 
      digitalWrite(ledPins[i], LOW);
    }
    for (int i = 9; i >= 0; i--) {                      //flickering right --> left
      digitalWrite(ledPins[i], HIGH); 
      delay(200); 
      digitalWrite(ledPins[i], LOW);
    }
  }
  int delay_Time = 1000;
  for (int i = 0; i < 10; i++) {                       //acceleration
    digitalWrite(ledPins[i], HIGH);  
    delay(delay_Time); 
    delay_Time -= 100;
    digitalWrite(ledPins[i], LOW);
  }
  for (int i = 0; i < 8; i++) {                       //jumping back and forth
    digitalWrite(ledPins[i], HIGH);  
    delay(200);
    digitalWrite(ledPins[i], LOW);
    digitalWrite(ledPins[i + 2], HIGH);  
    delay(200);
    digitalWrite(ledPins[i + 2], LOW);
  }
  for(int j = 0; j < 8; j++){                         // turning on every LED; blinking rapidly
    for (int i = 0; i < 10; i++) {                       
      digitalWrite(ledPins[i], HIGH);  
    }
    delay(100);
    for (int i = 0; i < 10; i++) {                       
      digitalWrite(ledPins[i], LOW);  
    }
    delay(100);
  }
  while(1);                                          //indefinite loop to stop the loop
}
